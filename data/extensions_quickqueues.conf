[from-internal-custom]
include => qq-dnd-custom
;include => qq-chanspy-custom
;include => qq-track-incomingoffwork
include => app-dnd-on
include => app-dnd-off


[qq-dnd-custom]
exten => 11,1,Macro(user-callerid,SKIPTTL)
exten => 11,n,QueueLog(NONE,${UNIQUEID},${AMPUSERCIDNAME},STARTPAUSE)
exten => 11,n,Goto(app-dnd-on,*78,1)
exten => 12,1,Macro(user-callerid,SKIPTTL)
exten => 12,n,QueueLog(NONE,${UNIQUEID},${AMPUSERCIDNAME},STOPPAUSE)
exten => 12,n,Goto(app-dnd-off,*79,1)
exten => h,1,Macro(hangupcall,)


[qq-chanspy-custom]
exten => _555XXX,1,Answer
exten => _555XXX,n,NoCDR()
exten => _555XXX,n,ChanSpy(Local/${EXTEN:3},q)
exten => _555XXX,n,Hangup
exten => _556XXX,1,Answer
exten => _556XXX,n,NoCDR()
exten => _556XXX,n,ChanSpy(SIP/${EXTEN:3},q)
exten => _556XXX,n,Hangup
exten => _557XXX,1,Answer
exten => _557XXX,n,NoCDR()
exten => _557XXX,n,ChanSpy(Local/${EXTEN:3},qw)
exten => _557XXX,n,Hangup


[qq-track-incomingoffwork]
exten => s,1,Noop(Start qq-track-incomingoffwork)
exten => s,n,QueueLog(NONE,${UNIQUEID},NONE,INCOMINGOFFWORK,${FROMEXTEN})
exten => s,n,Return()


[app-dnd-on]
include => app-dnd-on-custom
exten => *78,1,Macro(user-callerid,)
exten => *78,n,Set(CONNECTEDLINE(name-charset,i)=utf8)
exten => *78,n,Set(CONNECTEDLINE(name,i)=Do Not Disturb: ON)
exten => *78,n,Set(CONNECTEDLINE(num,i)=${AMPUSER})
exten => *78,n,Answer
exten => *78,n,Wait(1)
exten => *78,n,Set(DB(DND/${AMPUSER})=YES)
exten => *78,n,Set(STATE=BUSY)
exten => *78,n,Gosub(app-dnd-on,sstate,1())
exten => *78,n(hook_1),Playback(do-not-disturb&activated)
exten => *78,n,Macro(hangupcall,)

exten => sstate,1,Set(DEVICE_STATE(Custom:DND${AMPUSER})=${STATE})
exten => sstate,n,Set(DEVICES=${DB(AMPUSER/${AMPUSER}/device)})
exten => sstate,n,GotoIf($["${DEVICES}" = "" ]?return)
exten => sstate,n,Set(LOOPCNT=${FIELDQTY(DEVICES,&)})
exten => sstate,n,Set(ITER=1)
exten => sstate,n(begin),Set(DEVICE_STATE(Custom:DEVDND${CUT(DEVICES,&,${ITER})})=${STATE})
exten => sstate,n,Set(ITER=$[${ITER} + 1])
exten => sstate,n,GotoIf($[${ITER} <= ${LOOPCNT}]?begin)
exten => sstate,n(return),Return()


[app-dnd-off]
include => app-dnd-off-custom
exten => *79,1,Macro(user-callerid,)
exten => *79,n,Set(CONNECTEDLINE(name-charset,i)=utf8)
exten => *79,n,Set(CONNECTEDLINE(name,i)=Do Not Disturb: OFF)
exten => *79,n,Set(CONNECTEDLINE(num,i)=${AMPUSER})
exten => *79,n,Answer
exten => *79,n,Wait(1)
exten => *79,n,Noop(Deleting: DND/${AMPUSER} ${DB_DELETE(DND/${AMPUSER})})
exten => *79,n,Set(STATE=NOT_INUSE)
exten => *79,n,Gosub(app-dnd-off,sstate,1())
exten => *79,n(hook_1),Playback(do-not-disturb&de-activated)
exten => *79,n,Macro(hangupcall,)

exten => sstate,1,Set(DEVICE_STATE(Custom:DND${AMPUSER})=${STATE})
exten => sstate,n,Set(DEVICES=${DB(AMPUSER/${AMPUSER}/device)})
exten => sstate,n,GotoIf($["${DEVICES}" = "" ]?return)
exten => sstate,n,Set(LOOPCNT=${FIELDQTY(DEVICES,&)})
exten => sstate,n,Set(ITER=1)
exten => sstate,n(begin),Set(DEVICE_STATE(Custom:DEVDND${CUT(DEVICES,&,${ITER})})=${STATE})
exten => sstate,n,Set(ITER=$[${ITER} + 1])
exten => sstate,n,GotoIf($[${ITER} <= ${LOOPCNT}]?begin)
exten => sstate,n(return),Return()


[qq-generate-call]
exten => s,1,Answer
exten => s,n,Noop(Connecting agent to client ${AGENT} <> ${SRC})
exten => s,n,Dial(SIP/${TRUNK}/${DST})

[qq-survey-ivr-template]
exten => s,1,Answer
exten => s,n,Noop(Playing survey IVR message)
exten => s,n,Background(your-msg-has-been-saved)
exten => s,n,WaitExten(5,)
exten => 1,1,Noop(User pressed 1)
exten => 1,n,Noop(${AGENT} ${QUEUE} ${QQ_UNIQUEID} ${EXTEN})
exten => 1,n,QueueLog(${QUEUE},${QQ_UNIQUEID},${AGENT},SURVEYRESULT,1)
exten => 2,1,Noop(User pressed 2)
exten => 2,n,Noop(${AGENT} ${QUEUE} ${QQ_UNIQUEID} ${EXTEN})
exten => 2,n,QueueLog(${QUEUE},${QQ_UNIQUEID},${AGENT},SURVEYRESULT,2)
exten => 3,1,Noop(User pressed 3)
exten => 3,n,Noop(${AGENT} ${QUEUE} ${QQ_UNIQUEID} ${EXTEN})
exten => 3,n,QueueLog(${QUEUE},${QQ_UNIQUEID},${AGENT},SURVEYRESULT,3)
exten => 4,1,Noop(User pressed 4)
exten => 4,n,Noop(${AGENT} ${QUEUE} ${QQ_UNIQUEID} ${EXTEN})
exten => 4,n,QueueLog(${QUEUE},${QQ_UNIQUEID},${AGENT},SURVEYRESULT,4)
exten => 5,1,Noop(User pressed 5)
exten => 5,n,Noop(${AGENT} ${QUEUE} ${QQ_UNIQUEID} ${EXTEN})
exten => 5,n,QueueLog(${QUEUE},${QQ_UNIQUEID},${AGENT},SURVEYRESULT,5)
exten => i,1,Macro(hangupcall,)
exten => t,1,Macro(hangupcall,)

[qq-hotsale-generate-queue-call]
exten => s,1,Answer
exten => s,n,Noop(Connecting ${QQ_DST} to ${QQ_QUEUE} queue)
exten => s,n,Macro(user-callerid,)
exten => s,n,Set(CALLERID(num)=${QQ_DST})
exten => s,n,Goto(ext-queues,${QQ_QUEUE},1)

[qq-hotsale-generate-ivr-call]
exten => s,1,Answer
exten => s,n,Noop(Connecting ${QQ_DST} and Playing file ${QQ_FILE})
exten => s,n,Playback(custom/${QQ_FILE})

[qq-gamma-generate-call]
exten => s,1,Answer
exten => s,n,QueueLog(${QQ_QUEUE},${UNIQUEID},${QQ_AGENT},DIALOUTATTEMPT,${QQ_CUSTOMUNIQUEID})
exten => s,n,Noop(Connecting agent to client ${QQ_AGENT} <> ${QQ_SRC})
exten => s,n,Noop(${QQ_CUSTOMUNIQUEID} <> ${UNIQUEID})
exten => s,n,Macro(user-callerid,)
exten => s,n,Playback(custom/rec-serv-rec)
exten => s,n,Goto(ext-queues,${QQ_QUEUE},1)
exten => failed,1,Noop(Call failed for reason ${REASON})
exten => failed,n,QueueLog(${QQ_QUEUE},${UNIQUEID},${QQ_AGENT},DIALOUTFAILED,${QQ_CUSTOMUNIQUEID}|${REASON})